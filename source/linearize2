#!/bin/sh


if [[ "$#" == "1" && "$1" == "--help" ]]
then
	# print help page
	echo "Help page"
elif [[ "$#" == "2" || "$#" == "3" || "$#" == "4" || "$#" == "5" ]]
then
	default="/home2-3/p/phucn/packfolder"
	# read workspace directory path
	workplace=""
	if [ -f $default/wd ]
	then
		read workplace < $default/wd
	else
		workplace=$default
	fi

	pair1=$workplace/packtemp.line1.$$
	pair2=$workplace/packtemp.line2.$$

	# $1=pairs-file
	tempsed="$workplace/sedcmdtemp.$$"
	cat $1 | sh $workplace/pack $pair1 $pair2
	cat $pair1 $pair2 | sh $workplace/sedcmd > $tempsed

	result=$workplace/result.$$
	sed -f "$tempsed" "$2" > $result

	if [[ "$4" == "--print-modified-source" || "$4" == "-pms" ]]
		then
		if [[ "$3" == "-n" ]]
			then
			cat -n $result
		else
			cat $result
		fi
	fi


	# number of pairs
	LINEC=$(wc -l $pair1 | cut -d' ' -f1)
	for (( i = 1; i <= $LINEC; i++ ))
	do
		first[$i]=$(sed -n "$i{p;q}" $pair1)
		second[$i]=$(sed -n "$i{p;q}" $pair2)
		count[$i]=0
	done


	i=0
	lc=0
	while read line
	do
		lc=$((lc+1))
		direct="not found"
		tag=""
		for (( q = 1; q <= $LINEC; q++ ))
		do
			if [ "$line" == "${first[$q]}" ]
			then
			direct="in"
			tag="${first[$q]}"
			count[$q]=$((count[$q]+1))
			fi
		done

		for (( e = 1; e <= $LINEC; e++ ))
		do
			if [ "$line" == "${second[$e]}" ]
			then
			direct="out"
			tag="${second[$e]}"
			count[$e]=$((count[$e]-1))
			fi
		done

		case $direct in
		 "not found")
			;;
		 "in")
			if [[ "$3" == "-n" ]]
				then
				printf "%"$i"s %s -(%s)\n" "->" "$tag" "$lc"
			elif [[ "$3" == "-d" ]]
				then
				echo "$i"
			else
				printf "%"$i"s %s\n" "->" "$tag"
			fi
			i=$((i+10))
			;;
		 "out")
			i=$((i-10))
			if [[ "$3" == "-n" ]]
				then
				printf "%"$i"s %s -(%s)\n" "<-" "$tag" "$lc"
			elif [[ "$3" == "-d" ]]
				then
				echo "$i"
			else
				printf "%"$i"s %s\n" "<-" "$tag"
			fi
			;;
		esac
	done < $result

	if [[ "$5" != "--no-balance-sheet" && "$5" != "-nbs" && "$5" != "-nb" ]]
		then
		# print 'balance' sheet
		for (( i = 1; i <= $LINEC; i++ ))
		do
			echo "${first[$i]} ${second[$i]} ${count[$i]}"
		done
	fi
		
	rm $pair1 $pair2 # true to 'automatic' duration
	rm $tempsed
	rm $result

else
	echo "Try ./linearize --help"
fi


